// Greek recipe database
const recipes = [
    {
        name: "Μουσακάς",
        ingredients: ["μελιτζάνες", "κιμάς", "πατάτες", "κρεμμύδι", "σκόρδο", "ντομάτες", "καναέλι", "γλυκοκίτρινο", "τυρί", "μπεσαμέλ"],
        instructions: [
            "Ψήστε τις μελιτζάνες και τις πατάτες",
            "Κάντε τη σάλτσα με κιμά",
            "Φτιάξτε τη μπεσαμέλ",
            "Στρώστε τα στρώματα",
            "Ψήστε στον φούρνο"
        ],
        nutrition: "Θερμίδες: 450, Πρωτεΐνες: 25g, Υδατάνθρακες: 35g, Λίπος: 25g",
        categories: ["vegetarian", "gluten-free"],
        prepTime: "40 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Γιουβέτσι",
        ingredients: ["αρνίσιο κρέας", "ορζο", "ντομάτες", "κρεμμύδι", "σκόρδο", "καρυκεύματα", "τυρί"],
        instructions: [
            "Ψήστε το κρέας",
            "Προσθέστε το ορζο",
            "Καβουρδίστε τα λαχανικά",
            "Ψήστε στον φούρνο"
        ],
        nutrition: "Θερμίδες: 380, Πρωτεΐνες: 30g, Υδατάνθρακες: 40g, Λίπος: 15g",
        categories: ["gluten-free"],
        prepTime: "30 λεπτά",
        cookTime: "90 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Σπανακόρυζο",
        ingredients: ["σπανάκι", "ρύζι", "κρεμμύδι", "σκόρδο", "λάδι", "λάιμο", "αλάτι"],
        instructions: [
            "Καβουρδίστε το κρεμμύδι",
            "Προσθέστε το σπανάκι",
            "Βράστε το ρύζι",
            "Ανακατέψτε όλα τα συστατικά"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 8g, Υδατάνθρακες: 45g, Λίπος: 8g",
        categories: ["vegetarian", "vegan", "gluten-free"],
        prepTime: "20 λεπτά",
        cookTime: "30 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Γιγαντες",
        ingredients: ["φασόλια", "ντομάτες", "κρεμμύδι", "σκόρδο", "λάδι", "μαϊντανό", "αλάτι"],
        instructions: [
            "Μουλιάστε τα φασόλια",
            "Βράστε τα φασόλια",
            "Φτιάξτε τη σάλτσα",
            "Ψήστε στον φούρνο"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 12g, Υδατάνθρακες: 50g, Λίπος: 10g",
        categories: ["vegetarian", "vegan", "gluten-free"],
        prepTime: "120 λεπτά (με το μούλιασμα)",
        cookTime: "60 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Παστίτσιο",
        ingredients: ["μακαρόνια", "κιμάς", "ντομάτες", "κρεμμύδι", "σκόρδο", "μπεσαμέλ", "τυρί"],
        instructions: [
            "Βράστε τα μακαρόνια",
            "Φτιάξτε τη σάλτσα με κιμά",
            "Φτιάξτε τη μπεσαμέλ",
            "Στρώστε τα στρώματα",
            "Ψήστε στον φούρνο"
        ],
        nutrition: "Θερμίδες: 420, Πρωτεΐνες: 22g, Υδατάνθρακες: 45g, Λίπος: 20g",
        categories: ["vegetarian"],
        prepTime: "40 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Χωριάτικη Σαλάτα",
        ingredients: ["ντομάτες", "αγγούρι", "πιπεριά", "κρεμμύδι", "ελιές", "φέτα", "λάδι", "ρίγανη"],
        instructions: [
            "Κόψτε τα λαχανικά σε κύβους",
            "Προσθέστε τη φέτα και τις ελιές",
            "Περιχύστε με ελαιόλαδο",
            "Πασπαλίστε με ρίγανη"
        ],
        nutrition: "Θερμίδες: 210, Πρωτεΐνες: 7g, Υδατάνθρακες: 15g, Λίπος: 15g",
        categories: ["vegetarian", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "0 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Γεμιστά",
        ingredients: ["ντομάτες", "πιπεριές", "ρύζι", "κρεμμύδι", "μαϊντανός", "λάδι", "μπαχαρικά"],
        instructions: [
            "Αδειάστε τις ντομάτες και τις πιπεριές",
            "Ετοιμάστε το μείγμα ρυζιού",
            "Γεμίστε τα λαχανικά",
            "Ψήστε στον φούρνο"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 5g, Υδατάνθρακες: 35g, Λίπος: 12g",
        categories: ["vegetarian", "vegan", "gluten-free"],
        prepTime: "35 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Γιαούρτι με Μέλι",
        ingredients: ["γιαούρτι", "μέλι", "καρύδια", "κανέλα"],
        instructions: [
            "Βάλτε το γιαούρτι σε ένα μπολ",
            "Προσθέστε το μέλι",
            "Πασπαλίστε με τα καρύδια και την κανέλα"
        ],
        nutrition: "Θερμίδες: 200, Πρωτεΐνες: 12g, Υδατάνθρακες: 20g, Λίπος: 8g",
        categories: ["vegetarian", "gluten-free", "low-carb"],
        prepTime: "5 λεπτά",
        cookTime: "0 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Σουτζουκάκια",
        ingredients: ["κιμάς", "σκόρδο", "κύμινο", "κανέλα", "ντομάτες", "κρεμμύδι", "μαϊντανός", "κρασί"],
        instructions: [
            "Ανακατέψτε τον κιμά με τα μπαχαρικά",
            "Φτιάξτε τα σουτζουκάκια",
            "Τηγανίστε τα ελαφρά",
            "Προσθέστε τη σάλτσα ντομάτας",
            "Σιγοβράστε μέχρι να είναι έτοιμα"
        ],
        nutrition: "Θερμίδες: 350, Πρωτεΐνες: 25g, Υδατάνθρακες: 15g, Λίπος: 20g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Σπανακόπιτα",
        ingredients: ["σπανάκι", "φέτα", "κρεμμύδι", "άνηθο", "αυγά", "φύλλο", "ελαιόλαδο"],
        instructions: [
            "Σοτάρετε το σπανάκι με το κρεμμύδι",
            "Ανακατέψτε με τη φέτα και τα αυγά",
            "Απλώστε τα φύλλα στο ταψί",
            "Προσθέστε τη γέμιση",
            "Ψήστε στον φούρνο μέχρι να ροδίσει"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 12g, Υδατάνθρακες: 30g, Λίπος: 18g",
        categories: ["vegetarian"],
        prepTime: "30 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Ντολμαδάκια",
        ingredients: ["αμπελόφυλλα", "ρύζι", "κρεμμύδι", "άνηθος", "μαϊντανός", "δυόσμος", "λεμόνι", "ελαιόλαδο"],
        instructions: [
            "Ετοιμάστε τη γέμιση με ρύζι και μυρωδικά",
            "Ζεματίστε τα αμπελόφυλλα",
            "Τυλίξτε τη γέμιση στα φύλλα",
            "Βράστε σε χαμηλή φωτιά",
            "Σερβίρετε με αυγολέμονο"
        ],
        nutrition: "Θερμίδες: 240, Πρωτεΐνες: 5g, Υδατάνθρακες: 40g, Λίπος: 8g",
        categories: ["vegetarian", "vegan", "gluten-free"],
        prepTime: "45 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Δύσκολη"
    },
    {
        name: "Μπακαλιάρος Σκορδαλιά",
        ingredients: ["μπακαλιάρος", "αλεύρι", "σκόρδο", "πατάτες", "ελαιόλαδο", "ξύδι", "λεμόνι"],
        instructions: [
            "Ξαλμυρίστε τον μπακαλιάρο",
            "Παναρίστε και τηγανίστε",
            "Φτιάξτε τη σκορδαλιά με πατάτες και σκόρδο",
            "Σερβίρετε με λεμόνι"
        ],
        nutrition: "Θερμίδες: 400, Πρωτεΐνες: 30g, Υδατάνθρακες: 25g, Λίπος: 22g",
        categories: ["low-carb"],
        prepTime: "120 λεπτά (με το ξαλμύρισμα)",
        cookTime: "20 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Μπουγάτσα",
        ingredients: ["φύλλο κρούστας", "κρέμα", "γάλα", "σιμιγδάλι", "αυγά", "βούτυρο", "ζάχαρη", "κανέλα"],
        instructions: [
            "Φτιάξτε την κρέμα με γάλα και σιμιγδάλι",
            "Απλώστε τα φύλλα βουτηρωμένα",
            "Προσθέστε την κρέμα ανάμεσα στα φύλλα",
            "Ψήστε μέχρι να χρυσίσει",
            "Πασπαλίστε με ζάχαρη και κανέλα"
        ],
        nutrition: "Θερμίδες: 350, Πρωτεΐνες: 8g, Υδατάνθρακες: 50g, Λίπος: 12g",
        categories: ["vegetarian"],
        prepTime: "30 λεπτά",
        cookTime: "35 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Φακές Σούπα",
        ingredients: ["φακές", "κρεμμύδι", "καρότο", "σέλινο", "σκόρδο", "ντομάτα", "δάφνη", "ξύδι", "ελαιόλαδο"],
        instructions: [
            "Σοτάρετε τα λαχανικά",
            "Προσθέστε τις φακές και νερό",
            "Σιγοβράστε μέχρι να μαλακώσουν",
            "Προσθέστε ξύδι και ελαιόλαδο"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 15g, Υδατάνθρακες: 45g, Λίπος: 5g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "10 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Τζατζίκι",
        ingredients: ["γιαούρτι", "αγγούρι", "σκόρδο", "ελαιόλαδο", "ξύδι", "άνηθος"],
        instructions: [
            "Τρίψτε το αγγούρι και στραγγίξτε το",
            "Ανακατέψτε με το γιαούρτι",
            "Προσθέστε σκόρδο, λάδι και μυρωδικά",
            "Αφήστε το να δέσει στο ψυγείο"
        ],
        nutrition: "Θερμίδες: 150, Πρωτεΐνες: 10g, Υδατάνθρακες: 8g, Λίπος: 10g",
        categories: ["vegetarian", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "0 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Κεφτεδάκια",
        ingredients: ["κιμάς", "κρεμμύδι", "ψωμί", "μαϊντανός", "δυόσμος", "αυγό", "μπαχαρικά", "ελαιόλαδο"],
        instructions: [
            "Μουλιάστε το ψωμί και στύψτε το",
            "Ανακατέψτε όλα τα υλικά",
            "Πλάστε τους κεφτέδες",
            "Τηγανίστε σε καυτό λάδι"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 22g, Υδατάνθρακες: 15g, Λίπος: 20g",
        categories: ["low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "15 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Κλέφτικο",
        ingredients: ["αρνίσιο κρέας", "πατάτες", "κρεμμύδι", "σκόρδο", "ντομάτες", "λεμόνι", "ρίγανη", "δενδρολίβανο", "ελαιόλαδο"],
        instructions: [
            "Κόψτε το κρέας σε μερίδες",
            "Ανακατέψτε τα υλικά με τα μπαχαρικά",
            "Τυλίξτε σε λαδόκολλα και αλουμινόχαρτο",
            "Ψήστε αργά στο φούρνο για 3-4 ώρες"
        ],
        nutrition: "Θερμίδες: 420, Πρωτεΐνες: 35g, Υδατάνθρακες: 20g, Λίπος: 25g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "240 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Χταπόδι με Κρασί",
        ingredients: ["χταπόδι", "κόκκινο κρασί", "κρεμμύδι", "σκόρδο", "δαφνόφυλλα", "μπαχάρι", "κανέλα", "ελαιόλαδο"],
        instructions: [
            "Καθαρίστε το χταπόδι",
            "Βράστε το ελαφρά και κόψτε σε κομμάτια",
            "Σοτάρετε με τα μυρωδικά",
            "Προσθέστε κρασί και σιγοβράστε μέχρι να μαλακώσει"
        ],
        nutrition: "Θερμίδες: 210, Πρωτεΐνες: 28g, Υδατάνθρακες: 8g, Λίπος: 5g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Ρεβιθάδα Φούρνου",
        ingredients: ["ρεβίθια", "κρεμμύδι", "σκόρδο", "ντομάτα", "ελαιόλαδο", "λεμόνι", "ρίγανη", "δάφνη"],
        instructions: [
            "Μουλιάστε τα ρεβίθια για 12 ώρες",
            "Σοτάρετε κρεμμύδι και σκόρδο",
            "Προσθέστε τα ρεβίθια, ντομάτα και μυρωδικά",
            "Ψήστε στο φούρνο με νερό μέχρι να μαλακώσουν"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 15g, Υδατάνθρακες: 40g, Λίπος: 8g",
        categories: ["vegetarian", "vegan", "gluten-free"],
        prepTime: "30 λεπτά (+ 12 ώρες μούλιασμα)",
        cookTime: "90 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Γαλακτομπούρεκο",
        ingredients: ["φύλλο κρούστας", "γάλα", "σιμιγδάλι", "αυγά", "ζάχαρη", "βανίλια", "λεμόνι", "κανέλα"],
        instructions: [
            "Φτιάξτε κρέμα με γάλα, σιμιγδάλι και αυγά",
            "Απλώστε φύλλα και γεμίστε με την κρέμα",
            "Ψήστε μέχρι να χρυσίσει",
            "Περιχύστε με σιρόπι ζάχαρης"
        ],
        nutrition: "Θερμίδες: 380, Πρωτεΐνες: 10g, Υδατάνθρακες: 60g, Λίπος: 12g",
        categories: ["vegetarian"],
        prepTime: "40 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Μπριάμ",
        ingredients: ["πατάτες", "κολοκύθια", "μελιτζάνες", "ντομάτες", "πιπεριές", "κρεμμύδι", "σκόρδο", "ελαιόλαδο", "μαϊντανό"],
        instructions: [
            "Κόψτε όλα τα λαχανικά σε λεπτές φέτες",
            "Τοποθετήστε σε στρώσεις σε ταψί",
            "Περιχύστε με λάδι και προσθέστε τα μυρωδικά",
            "Ψήστε στο φούρνο μέχρι να μαλακώσουν"
        ],
        nutrition: "Θερμίδες: 220, Πρωτεΐνες: 5g, Υδατάνθρακες: 30g, Λίπος: 10g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Σαρικόπιτα Κρήτης",
        ingredients: ["φύλλο χωριάτικο", "μυζήθρα", "φέτα", "αυγά", "μέλι", "κανέλα", "σουσάμι"],
        instructions: [
            "Ανακατέψτε τα τυριά με αυγά",
            "Απλώστε τα φύλλα σε στρώσεις με λάδι",
            "Προσθέστε τη γέμιση και τυλίξτε σε ρολό",
            "Ψήστε και περιχύστε με μέλι και κανέλα"
        ],
        nutrition: "Θερμίδες: 350, Πρωτεΐνες: 15g, Υδατάνθρακες: 35g, Λίπος: 18g",
        categories: ["vegetarian"],
        prepTime: "30 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Παστελι",
        ingredients: ["σουσάμι", "μέλι", "λεμόνι", "αμύγδαλα"],
        instructions: [
            "Καβουρδίστε το σουσάμι",
            "Ζεστάνετε το μέλι",
            "Ανακατέψτε με το σουσάμι και τα αμύγδαλα",
            "Απλώστε σε λαδωμένη επιφάνεια και αφήστε να κρυώσει"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 8g, Υδατάνθρακες: 25g, Λίπος: 18g",
        categories: ["vegetarian", "gluten-free"],
        prepTime: "15 λεπτά",
        cookTime: "10 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Αρνάκι με Αγκινάρες",
        ingredients: ["αρνίσιο κρέας", "αγκινάρες", "κρεμμύδι", "άνηθος", "λεμόνι", "αυγά", "αλεύρι", "ελαιόλαδο"],
        instructions: [
            "Κόψτε το αρνί σε κομμάτια και τσιγαρίστε",
            "Προσθέστε κρεμμύδι και αγκινάρες",
            "Προσθέστε νερό και σιγοβράστε",
            "Ετοιμάστε αυγολέμονο και προσθέστε το στο τέλος"
        ],
        nutrition: "Θερμίδες: 380, Πρωτεΐνες: 30g, Υδατάνθρακες: 15g, Λίπος: 22g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Σαλάτα Παντζάρια",
        ingredients: ["παντζάρια", "γιαούρτι", "σκόρδο", "καρύδια", "ξύδι", "ελαιόλαδο", "άνηθος"],
        instructions: [
            "Βράστε τα παντζάρια μέχρι να μαλακώσουν",
            "Κόψτε σε κύβους όταν κρυώσουν",
            "Ανακατέψτε το γιαούρτι με σκόρδο και λάδι",
            "Ρίξτε το ντρέσινγκ πάνω στα παντζάρια και προσθέστε καρύδια"
        ],
        nutrition: "Θερμίδες: 180, Πρωτεΐνες: 7g, Υδατάνθρακες: 15g, Λίπος: 12g",
        categories: ["vegetarian", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Κουνουπίδι με Σκορδαλιά",
        ingredients: ["κουνουπίδι", "πατάτες", "σκόρδο", "ελαιόλαδο", "ξύδι", "λεμόνι", "αλάτι"],
        instructions: [
            "Βράστε το κουνουπίδι μέχρι να μαλακώσει",
            "Φτιάξτε τη σκορδαλιά με πατάτες και πολύ σκόρδο",
            "Σερβίρετε το κουνουπίδι με τη σκορδαλιά από πάνω",
            "Περιχύστε με λάδι και λεμόνι"
        ],
        nutrition: "Θερμίδες: 220, Πρωτεΐνες: 6g, Υδατάνθρακες: 25g, Λίπος: 14g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "35 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Ιμάμ Μπαϊλντί",
        ingredients: ["μελιτζάνες", "κρεμμύδι", "σκόρδο", "ντομάτες", "μαϊντανός", "κανέλα", "ελαιόλαδο"],
        instructions: [
            "Κόψτε τις μελιτζάνες στη μέση και χαράξτε τη σάρκα",
            "Τηγανίστε ελαφρά τις μελιτζάνες",
            "Ετοιμάστε τη γέμιση με κρεμμύδια, σκόρδο και ντομάτα",
            "Γεμίστε τις μελιτζάνες και ψήστε στο φούρνο"
        ],
        nutrition: "Θερμίδες: 240, Πρωτεΐνες: 5g, Υδατάνθρακες: 25g, Λίπος: 15g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "50 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Ψαρόσουπα Αυγολέμονο",
        ingredients: ["ψάρι λευκό", "καρότα", "σέλινο", "κρεμμύδι", "πατάτες", "αυγά", "λεμόνι", "ρύζι", "μαϊντανός"],
        instructions: [
            "Βράστε το ψάρι με τα λαχανικά",
            "Προσθέστε το ρύζι και βράστε μέχρι να μαλακώσει",
            "Αφαιρέστε το ψάρι και καθαρίστε το από τα κόκκαλα",
            "Ετοιμάστε το αυγολέμονο και προσθέστε το στη σούπα"
        ],
        nutrition: "Θερμίδες: 260, Πρωτεΐνες: 22g, Υδατάνθρακες: 30g, Λίπος: 6g",
        categories: ["gluten-free"],
        prepTime: "20 λεπτά",
        cookTime: "50 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Μπάμιες Λαδερές",
        ingredients: ["μπάμιες", "κρεμμύδι", "σκόρδο", "ντομάτες", "λεμόνι", "ελαιόλαδο", "μαϊντανός"],
        instructions: [
            "Καθαρίστε και πλύνετε τις μπάμιες",
            "Τσιγαρίστε το κρεμμύδι και το σκόρδο",
            "Προσθέστε τις μπάμιες και τη ντομάτα",
            "Σιγοβράστε μέχρι να μαλακώσουν οι μπάμιες"
        ],
        nutrition: "Θερμίδες: 185, Πρωτεΐνες: 4g, Υδατάνθρακες: 22g, Λίπος: 10g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Χταποδάκι με Κοφτό Μακαρονάκι",
        ingredients: ["χταπόδι", "μακαρονάκι κοφτό", "κρεμμύδι", "σκόρδο", "ντομάτες", "κρασί", "δάφνη", "ελαιόλαδο"],
        instructions: [
            "Καθαρίστε και βράστε το χταπόδι",
            "Κόψτε το σε κομμάτια",
            "Τσιγαρίστε με κρεμμύδι και σκόρδο",
            "Προσθέστε ντομάτα και κρασί",
            "Βράστε τα μακαρόνια και ανακατέψτε"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 25g, Υδατάνθρακες: 40g, Λίπος: 8g",
        categories: ["low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Μυδοπίλαφο",
        ingredients: ["μύδια", "ρύζι", "κρεμμύδι", "σκόρδο", "άνηθος", "λεμόνι", "ελαιόλαδο", "κρασί λευκό"],
        instructions: [
            "Καθαρίστε τα μύδια",
            "Σοτάρετε το κρεμμύδι και το σκόρδο",
            "Προσθέστε το ρύζι και τα μύδια",
            "Σβήστε με κρασί και προσθέστε νερό",
            "Βράστε μέχρι να γίνει το ρύζι"
        ],
        nutrition: "Θερμίδες: 310, Πρωτεΐνες: 20g, Υδατάνθρακες: 45g, Λίπος: 6g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "30 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Λουκουμάδες",
        ingredients: ["αλεύρι", "μαγιά", "ζάχαρη", "νερό", "μέλι", "κανέλα", "λάδι για τηγάνισμα"],
        instructions: [
            "Ετοιμάστε τη ζύμη με αλεύρι, μαγιά και νερό",
            "Αφήστε να φουσκώσει",
            "Τηγανίστε μικρές μπαλίτσες ζύμης",
            "Περιχύστε με μέλι και πασπαλίστε με κανέλα"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 5g, Υδατάνθρακες: 55g, Λίπος: 10g",
        categories: ["vegetarian", "vegan"],
        prepTime: "30 λεπτά (+ χρόνος για να φουσκώσει)",
        cookTime: "20 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Κολοκυθάκια Γεμιστά",
        ingredients: ["κολοκυθάκια", "ρύζι", "κρεμμύδι", "μαϊντανός", "άνηθος", "δυόσμος", "ντομάτες", "ελαιόλαδο"],
        instructions: [
            "Αδειάστε τα κολοκυθάκια",
            "Ετοιμάστε τη γέμιση με ρύζι και μυρωδικά",
            "Γεμίστε τα κολοκυθάκια",
            "Ψήστε στο φούρνο με ντομάτα"
        ],
        nutrition: "Θερμίδες: 220, Πρωτεΐνες: 5g, Υδατάνθρακες: 30g, Λίπος: 10g",
        categories: ["vegetarian", "vegan", "gluten-free"],
        prepTime: "40 λεπτά",
        cookTime: "50 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Σαγανάκι Γαρίδες",
        ingredients: ["γαρίδες", "φέτα", "ντομάτες", "κρεμμύδι", "σκόρδο", "πιπεριά", "ούζο", "ελαιόλαδο", "μαϊντανός"],
        instructions: [
            "Καθαρίστε τις γαρίδες",
            "Τσιγαρίστε κρεμμύδι, σκόρδο και πιπεριά",
            "Προσθέστε ντομάτα και γαρίδες",
            "Σβήστε με ούζο",
            "Προσθέστε τη φέτα και ψήστε στο φούρνο"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 22g, Υδατάνθρακες: 10g, Λίπος: 16g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "25 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Ραβανί",
        ingredients: ["σιμιγδάλι", "αυγά", "γιαούρτι", "ζάχαρη", "λεμόνι", "βανίλια", "μπέικιν πάουντερ"],
        instructions: [
            "Χτυπήστε τα αυγά με τη ζάχαρη",
            "Προσθέστε το γιαούρτι, το λεμόνι και τη βανίλια",
            "Ανακατέψτε με το σιμιγδάλι και το μπέικιν",
            "Ψήστε στο φούρνο μέχρι να χρυσίσει",
            "Περιχύστε με σιρόπι ζάχαρης"
        ],
        nutrition: "Θερμίδες: 330, Πρωτεΐνες: 7g, Υδατάνθρακες: 55g, Λίπος: 9g",
        categories: ["vegetarian"],
        prepTime: "25 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Μανιτάρια Πλευρώτους στη Σχάρα",
        ingredients: ["μανιτάρια πλευρώτους", "ελαιόλαδο", "λεμόνι", "σκόρδο", "ρίγανη", "θυμάρι", "αλάτι", "πιπέρι"],
        instructions: [
            "Καθαρίστε τα μανιτάρια",
            "Ανακατέψτε τα με λάδι, λεμόνι, σκόρδο και μυρωδικά",
            "Ψήστε στη σχάρα ή σε αντικολλητικό τηγάνι",
            "Σερβίρετε με φρέσκο λεμόνι"
        ],
        nutrition: "Θερμίδες: 130, Πρωτεΐνες: 4g, Υδατάνθρακες: 8g, Λίπος: 10g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "10 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Κεφτέδες με Σάλτσα Αυγολέμονο",
        ingredients: ["κιμάς", "ψωμί", "κρεμμύδι", "μαϊντανός", "δυόσμος", "αυγά", "λεμόνι", "αλεύρι", "ελαιόλαδο"],
        instructions: [
            "Φτιάξτε τους κεφτέδες με κιμά, ψωμί, κρεμμύδι και μυρωδικά",
            "Τηγανίστε ελαφρά",
            "Βράστε σε ζωμό",
            "Ετοιμάστε το αυγολέμονο και περιχύστε τους κεφτέδες"
        ],
        nutrition: "Θερμίδες: 350, Πρωτεΐνες: 24g, Υδατάνθρακες: 18g, Λίπος: 22g",
        categories: ["low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "25 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Καριδόπιτα",
        ingredients: ["καρύδια", "αυγά", "ζάχαρη", "αλεύρι", "κανέλα", "γαρύφαλλο", "βούτυρο", "μέλι"],
        instructions: [
            "Χτυπήστε τα αυγά με τη ζάχαρη",
            "Προσθέστε τα καρύδια και τα μπαχαρικά",
            "Ανακατέψτε με το αλεύρι",
            "Ψήστε στο φούρνο",
            "Περιχύστε με σιρόπι μελιού"
        ],
        nutrition: "Θερμίδες: 420, Πρωτεΐνες: 9g, Υδατάνθρακες: 50g, Λίπος: 25g",
        categories: ["vegetarian"],
        prepTime: "20 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Κοτόπουλο Λεμονάτο",
        ingredients: ["κοτόπουλο", "λεμόνι", "πατάτες", "ελαιόλαδο", "ρίγανη", "σκόρδο", "αλάτι", "πιπέρι"],
        instructions: [
            "Μαρινάρετε το κοτόπουλο με λεμόνι και μυρωδικά",
            "Τοποθετήστε σε ταψί με τις πατάτες",
            "Περιχύστε με λάδι και λεμόνι",
            "Ψήστε στο φούρνο μέχρι να ροδίσει"
        ],
        nutrition: "Θερμίδες: 380, Πρωτεΐνες: 28g, Υδατάνθρακες: 25g, Λίπος: 18g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Λαχανοντολμάδες",
        ingredients: ["λάχανο", "κιμάς", "ρύζι", "κρεμμύδι", "μαϊντανός", "άνηθος", "αυγά", "λεμόνι"],
        instructions: [
            "Ζεματίστε τα φύλλα του λάχανου",
            "Ετοιμάστε τη γέμιση με κιμά, ρύζι και μυρωδικά",
            "Τυλίξτε τη γέμιση στα φύλλα",
            "Βράστε τους λαχανοντολμάδες",
            "Σερβίρετε με αυγολέμονο"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 20g, Υδατάνθρακες: 30g, Λίπος: 15g",
        categories: ["gluten-free"],
        prepTime: "45 λεπτά",
        cookTime: "50 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Μαρίδα Τηγανιτή",
        ingredients: ["μαρίδες", "αλεύρι", "λεμόνι", "ελαιόλαδο", "αλάτι", "ρίγανη"],
        instructions: [
            "Καθαρίστε και πλύνετε τις μαρίδες",
            "Αλευρώστε ελαφρά",
            "Τηγανίστε σε καυτό λάδι",
            "Σερβίρετε με λεμόνι και ρίγανη"
        ],
        nutrition: "Θερμίδες: 260, Πρωτεΐνες: 22g, Υδατάνθρακες: 15g, Λίπος: 14g",
        categories: ["low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "10 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Φασολάκια Λαδερά",
        ingredients: ["φασολάκια φρέσκα", "ντομάτες", "κρεμμύδι", "σκόρδο", "ελαιόλαδο", "μαϊντανός", "άνηθος"],
        instructions: [
            "Καθαρίστε τα φασολάκια",
            "Τσιγαρίστε το κρεμμύδι και το σκόρδο",
            "Προσθέστε τις ντομάτες και τα φασολάκια",
            "Σιγοβράστε μέχρι να μαλακώσουν"
        ],
        nutrition: "Θερμίδες: 210, Πρωτεΐνες: 6g, Υδατάνθρακες: 25g, Λίπος: 12g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Κοτόσουπα με Τραχανά",
        ingredients: ["κοτόπουλο", "τραχανάς", "καρότα", "κρεμμύδι", "σέλινο", "αυγά", "λεμόνι", "άνηθος"],
        instructions: [
            "Βράστε το κοτόπουλο με τα λαχανικά",
            "Προσθέστε τον τραχανά και βράστε μέχρι να γίνει",
            "Ετοιμάστε το αυγολέμονο",
            "Προσθέστε το αυγολέμονο στη σούπα"
        ],
        nutrition: "Θερμίδες: 320, Πρωτεΐνες: 25g, Υδατάνθρακες: 30g, Λίπος: 12g",
        categories: ["low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "60 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Μπακαλιάρος Πλακί",
        ingredients: ["μπακαλιάρος", "ντομάτες", "κρεμμύδι", "σκόρδο", "πιπεριές", "μαϊντανός", "ελαιόλαδο", "δάφνη"],
        instructions: [
            "Ξαλμυρίστε τον μπακαλιάρο αν χρειάζεται",
            "Σοτάρετε τα λαχανικά",
            "Προσθέστε τον μπακαλιάρο και ψήστε στο φούρνο",
            "Σερβίρετε με φρέσκο μαϊντανό"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 30g, Υδατάνθρακες: 15g, Λίπος: 12g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Κανταΐφι",
        ingredients: ["φύλλο κανταΐφι", "καρύδια", "αμύγδαλα", "βούτυρο", "ζάχαρη", "κανέλα", "γαρύφαλλο", "μέλι"],
        instructions: [
            "Ανακατέψτε τα καρύδια με τη ζάχαρη και τα μπαχαρικά",
            "Απλώστε το φύλλο κανταΐφι και προσθέστε τη γέμιση",
            "Τυλίξτε σε ρολά και περιχύστε με λιωμένο βούτυρο",
            "Ψήστε μέχρι να χρυσίσουν",
            "Περιχύστε με σιρόπι μελιού"
        ],
        nutrition: "Θερμίδες: 450, Πρωτεΐνες: 8g, Υδατάνθρακες: 60g, Λίπος: 22g",
        categories: ["vegetarian"],
        prepTime: "30 λεπτά",
        cookTime: "35 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Σπανακόρυζο με Γαρίδες",
        ingredients: ["σπανάκι", "ρύζι", "γαρίδες", "κρεμμύδι", "σκόρδο", "άνηθος", "λεμόνι", "ελαιόλαδο"],
        instructions: [
            "Καθαρίστε τις γαρίδες",
            "Σοτάρετε το κρεμμύδι, το σκόρδο και το σπανάκι",
            "Προσθέστε το ρύζι και νερό",
            "Όταν το ρύζι είναι σχεδόν έτοιμο, προσθέστε τις γαρίδες"
        ],
        nutrition: "Θερμίδες: 330, Πρωτεΐνες: 24g, Υδατάνθρακες: 40g, Λίπος: 9g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "30 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Μελιτζανοσαλάτα",
        ingredients: ["μελιτζάνες", "σκόρδο", "λεμόνι", "ελαιόλαδο", "μαϊντανός", "πιπεριά φλωρίνης", "ξύδι"],
        instructions: [
            "Ψήστε τις μελιτζάνες στο φούρνο ή στη φωτιά",
            "Καθαρίστε τις και λιώστε τη σάρκα",
            "Προσθέστε λάδι, σκόρδο, λεμόνι και μαϊντανό",
            "Διακοσμήστε με πιπεριά φλωρίνης"
        ],
        nutrition: "Θερμίδες: 150, Πρωτεΐνες: 3g, Υδατάνθρακες: 12g, Λίπος: 11g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "30 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Μπουρεκάκια με Φέτα",
        ingredients: ["φύλλο κρούστας", "φέτα", "αυγά", "δυόσμος", "βούτυρο", "σουσάμι"],
        instructions: [
            "Λιώστε τη φέτα και ανακατέψτε με αυγό και δυόσμο",
            "Απλώστε την γέμιση στο φύλλο κρούστας",
            "Διπλώστε σε τρίγωνο ή ρολό",
            "Αλείψτε με βούτυρο και πασπαλίστε με σουσάμι",
            "Ψήστε μέχρι να χρυσίσουν"
        ],
        nutrition: "Θερμίδες: 280, Πρωτεΐνες: 10g, Υδατάνθρακες: 25g, Λίπος: 16g",
        categories: ["vegetarian"],
        prepTime: "20 λεπτά",
        cookTime: "25 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Ρεβυθάδα Σαντορίνης",
        ingredients: ["ρεβίθια", "κρεμμύδι", "ελαιόλαδο", "δάφνη", "ρίγανη", "αλάτι", "πιπέρι"],
        instructions: [
            "Μουλιάστε τα ρεβίθια για 12 ώρες",
            "Τοποθετήστε τα σε πήλινο σκεύος με το κρεμμύδι",
            "Προσθέστε λάδι και μυρωδικά",
            "Ψήστε στο φούρνο για πολλές ώρες σε χαμηλή θερμοκρασία"
        ],
        nutrition: "Θερμίδες: 290, Πρωτεΐνες: 15g, Υδατάνθρακες: 42g, Λίπος: 9g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "20 λεπτά (+ 12 ώρες μούλιασμα)",
        cookTime: "240 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Γαλατόπιτα",
        ingredients: ["γάλα", "αυγά", "σιμιγδάλι", "ζάχαρη", "βανίλια", "κανέλα", "λεμόνι", "βούτυρο"],
        instructions: [
            "Ζεστάνετε το γάλα με τη ζάχαρη",
            "Προσθέστε το σιμιγδάλι και ανακατέψτε",
            "Προσθέστε τα αυγά και τη βανίλια",
            "Ψήστε στο φούρνο μέχρι να σταθεροποιηθεί",
            "Πασπαλίστε με κανέλα"
        ],
        nutrition: "Θερμίδες: 310, Πρωτεΐνες: 12g, Υδατάνθρακες: 45g, Λίπος: 11g",
        categories: ["vegetarian", "gluten-free"],
        prepTime: "20 λεπτά",
        cookTime: "40 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Μπαρμπούνια Σαβόρο",
        ingredients: ["μπαρμπούνια", "ξύδι", "σκόρδο", "ρίγανη", "δάφνη", "πετιμέζι", "σταφίδες", "αλεύρι", "ελαιόλαδο"],
        instructions: [
            "Αλευρώστε τα ψάρια και τηγανίστε",
            "Ετοιμάστε τη σάλτσα με ξύδι, σκόρδο, μυρωδικά και σταφίδες",
            "Περιχύστε τα ψάρια με τη σάλτσα",
            "Αφήστε να μαριναριστούν για λίγες ώρες"
        ],
        nutrition: "Θερμίδες: 290, Πρωτεΐνες: 25g, Υδατάνθρακες: 20g, Λίπος: 14g",
        categories: ["low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "15 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Χοιρινό με Σέλινο Αυγολέμονο",
        ingredients: ["χοιρινό κρέας", "σέλινο", "καρότα", "κρεμμύδι", "αυγά", "λεμόνι", "αλεύρι", "ελαιόλαδο"],
        instructions: [
            "Τσιγαρίστε το κρέας",
            "Προσθέστε τα λαχανικά και νερό",
            "Βράστε μέχρι να μαλακώσει το κρέας",
            "Ετοιμάστε το αυγολέμονο και προσθέστε το στο φαγητό"
        ],
        nutrition: "Θερμίδες: 360, Πρωτεΐνες: 28g, Υδατάνθρακες: 15g, Λίπος: 22g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "25 λεπτά",
        cookTime: "70 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Κολοκυθοκεφτέδες",
        ingredients: ["κολοκύθια", "κρεμμύδι", "φέτα", "αυγό", "δυόσμος", "άνηθος", "αλεύρι", "ελαιόλαδο"],
        instructions: [
            "Τρίψτε τα κολοκύθια και στραγγίξτε τα",
            "Ανακατέψτε με φέτα, κρεμμύδι και μυρωδικά",
            "Προσθέστε αλεύρι και αυγό",
            "Τηγανίστε σε δόσεις σε καυτό λάδι"
        ],
        nutrition: "Θερμίδες: 240, Πρωτεΐνες: 8g, Υδατάνθρακες: 18g, Λίπος: 17g",
        categories: ["vegetarian", "low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "15 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Γιαουρτλού",
        ingredients: ["κεφτέδες", "γιαούρτι", "ντομάτες", "σκόρδο", "πιπεριές", "βούτυρο", "πιπέρι", "πίτα"],
        instructions: [
            "Φτιάξτε και τηγανίστε τους κεφτέδες",
            "Ετοιμάστε τη σάλτσα ντομάτας",
            "Φτιάξτε το γιαούρτι με σκόρδο",
            "Σερβίρετε σε στρώσεις με τους κεφτέδες και το γιαούρτι"
        ],
        nutrition: "Θερμίδες: 420, Πρωτεΐνες: 25g, Υδατάνθρακες: 30g, Λίπος: 24g",
        categories: ["low-carb"],
        prepTime: "35 λεπτά",
        cookTime: "25 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Φάβα Σαντορίνης",
        ingredients: ["φάβα", "κρεμμύδι", "λεμόνι", "ελαιόλαδο", "ρίγανη", "κάπαρη"],
        instructions: [
            "Πλύνετε και βράστε τη φάβα",
            "Πολτοποιήστε όταν μαλακώσει",
            "Προσθέστε λάδι και λεμόνι",
            "Γαρνίρετε με ωμό κρεμμύδι και κάπαρη"
        ],
        nutrition: "Θερμίδες: 230, Πρωτεΐνες: 10g, Υδατάνθρακες: 35g, Λίπος: 8g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "10 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Μουσταλευριά",
        ingredients: ["πετιμέζι", "αλεύρι", "νερό", "κανέλα", "σταφίδες", "καρύδια", "σουσάμι"],
        instructions: [
            "Διαλύστε το αλεύρι σε νερό",
            "Προσθέστε το πετιμέζι και βράστε",
            "Ανακατεύετε μέχρι να πήξει",
            "Μοιράστε σε μπολ και γαρνίρετε με καρύδια και κανέλα"
        ],
        nutrition: "Θερμίδες: 220, Πρωτεΐνες: 5g, Υδατάνθρακες: 40g, Λίπος: 6g",
        categories: ["vegetarian", "vegan"],
        prepTime: "10 λεπτά",
        cookTime: "20 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Παπουτσάκια",
        ingredients: ["μελιτζάνες", "κιμάς", "κρεμμύδι", "σκόρδο", "ντομάτες", "κανέλα", "μπεσαμέλ", "τυρί"],
        instructions: [
            "Κόψτε τις μελιτζάνες στη μέση και ψήστε τις",
            "Ετοιμάστε τον κιμά με σάλτσα ντομάτας",
            "Γεμίστε τις μελιτζάνες με τον κιμά",
            "Καλύψτε με μπεσαμέλ και τυρί",
            "Ψήστε στο φούρνο μέχρι να χρυσίσουν"
        ],
        nutrition: "Θερμίδες: 370, Πρωτεΐνες: 18g, Υδατάνθρακες: 25g, Λίπος: 22g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "45 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Κουρκουμπίνες Σκοπέλου",
        ingredients: ["αλεύρι", "ζάχαρη", "μέλι", "σουσάμι", "κανέλα", "γαρύφαλλο", "ελαιόλαδο", "ξύδι"],
        instructions: [
            "Ετοιμάστε τη ζύμη με αλεύρι, λάδι και ξύδι",
            "Ανοίξτε λεπτά φύλλα",
            "Φτιάξτε το σιρόπι με μέλι και μπαχαρικά",
            "Ψήστε τα φύλλα και περιχύστε με το σιρόπι",
            "Πασπαλίστε με σουσάμι"
        ],
        nutrition: "Θερμίδες: 290, Πρωτεΐνες: 5g, Υδατάνθρακες: 50g, Λίπος: 9g",
        categories: ["vegetarian", "vegan"],
        prepTime: "40 λεπτά",
        cookTime: "30 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Παστουρμαδοπιτάκια",
        ingredients: ["φύλλο κρούστας", "παστουρμάς", "κασέρι", "αυγό", "σουσάμι", "μπούκοβο", "ελαιόλαδο"],
        instructions: [
            "Κόψτε τον παστουρμά και το κασέρι σε λεπτές φέτες",
            "Κόψτε το φύλλο σε τετράγωνα",
            "Τοποθετήστε παστουρμά και κασέρι",
            "Διπλώστε σε τρίγωνα και αλείψτε με αυγό",
            "Ψήστε μέχρι να χρυσίσουν"
        ],
        nutrition: "Θερμίδες: 310, Πρωτεΐνες: 14g, Υδατάνθρακες: 22g, Λίπος: 19g",
        categories: ["low-carb"],
        prepTime: "20 λεπτά",
        cookTime: "20 λεπτά",
        difficulty: "Εύκολη"
    },
    {
        name: "Σουπιές με Σπανάκι",
        ingredients: ["σουπιές", "σπανάκι", "κρεμμύδι", "σκόρδο", "άνηθος", "μάραθο", "λεμόνι", "ελαιόλαδο"],
        instructions: [
            "Καθαρίστε τις σουπιές και κόψτε τις σε κομμάτια",
            "Τσιγαρίστε με κρεμμύδι και σκόρδο",
            "Προσθέστε το σπανάκι και τα μυρωδικά",
            "Μαγειρέψτε σε χαμηλή φωτιά μέχρι να μαλακώσουν"
        ],
        nutrition: "Θερμίδες: 240, Πρωτεΐνες: 26g, Υδατάνθρακες: 12g, Λίπος: 10g",
        categories: ["gluten-free", "low-carb"],
        prepTime: "30 λεπτά",
        cookTime: "50 λεπτά",
        difficulty: "Μέτρια"
    },
    {
        name: "Σκορδαλιά",
        ingredients: ["πατάτες", "σκόρδο", "ελαιόλαδο", "ξύδι", "ψωμί", "αμύγδαλα", "λεμόνι"],
        instructions: [
            "Βράστε τις πατάτες μέχρι να μαλακώσουν",
            "Λιώστε το σκόρδο με αλάτι",
            "Πολτοποιήστε τις πατάτες και προσθέστε το σκόρδο",
            "Προσθέστε λάδι και ξύδι σταδιακά",
            "Προσθέστε τριμμένα αμύγδαλα αν θέλετε"
        ],
        nutrition: "Θερμίδες: 180, Πρωτεΐνες: 4g, Υδατάνθρακες: 20g, Λίπος: 12g",
        categories: ["vegetarian", "vegan", "gluten-free", "low-carb"],
        prepTime: "15 λεπτά",
        cookTime: "25 λεπτά",
        difficulty: "Εύκολη"
    }
];

// All common Greek ingredients for auto-complete and suggestions
const commonIngredients = [
    "μελιτζάνες", "κιμάς", "πατάτες", "κρεμμύδι", "σκόρδο", "ντομάτες", 
    "τυρί", "φέτα", "μπεσαμέλ", "ελιές", "ρύζι", "φασόλια", "σπανάκι",
    "λάδι", "λεμόνι", "αρνίσιο κρέας", "μακαρόνια", "γιαούρτι", "μέλι",
    "κανέλα", "αγγούρι", "πιπεριές", "μαϊντανός", "ρίγανη", "καρύδια",
    "φύλλο", "άνηθος", "δυόσμος", "κύμινο", "αυγά", "αμπελόφυλλα",
    "μπακαλιάρος", "καρότο", "σέλινο", "φακές", "ξύδι", "αλεύρι", 
    "ζάχαρη", "βούτυρο", "σιμιγδάλι", "ορζο", "κρασί", "ψωμί",
    "χταπόδι", "δενδρολίβανο", "παντζάρια", "δαφνόφυλλα", "ρεβίθια",
    "κολοκύθια", "αγκινάρες", "μυζήθρα", "σουσάμι", "αμύγδαλα",
    "μπαχάρι", "βανίλια", "φύλλο χωριάτικο", "φύλλο κρούστας",
    "κουνουπίδι", "μπάμιες", "γαρίδες", "μύδια", "φάβα", "ψάρι λευκό",
    "λάχανο", "πιπεριά φλωρίνης", "μανιτάρια πλευρώτους", "κοτόπουλο",
    "χοιρινό κρέας", "μαρίδες", "σουπιές", "μπαρμπούνια", "κασέρι",
    "τραχανάς", "παστουρμάς", "πετιμέζι", "κάπαρη", "θυμάρι", "γαρύφαλλο"
];

let selectedIngredients = [];
let dietaryPreferences = [];
let difficultyFilter = "all";
let timeFilter = "all";
let sortingOption = "default";

// Language Toggle Functionality
let currentLanguage = 'el'; // Default language is Greek (el)

// Language translations
const translations = {
    el: {
        mainTitle: 'Έξυπνος Γεννήτης Ελληνικών Συνταγών',
        featureDesc: 'Ανακαλύψτε νέες ελληνικές συνταγές με βάση τα συστατικά σας!',
        feature1: 'Φιλτράρετε συνταγές με βάση τη δυσκολία και το χρόνο μαγειρέματος',
        feature2: 'Ταξινομήστε τις συνταγές σας με πολλαπλά κριτήρια',
        feature3: 'Πάνω από 50 αυθεντικές ελληνικές συνταγές στη βάση δεδομένων μας',
        startButton: 'Ξεκινήστε',
        ingredientsTitle: 'Επιλέξτε τα Συστατικά σας',
        addButton: 'Προσθήκη',
        popularIngredientsTitle: 'Δημοφιλή Συστατικά:',
        selectedIngredientsTitle: 'Επιλεγμένα Συστατικά:',
        preferencesTitle: 'Προτιμήσεις και Φίλτρα',
        dietaryPreferencesTitle: 'Διατροφικές Προτιμήσεις',
        vegetarian: 'Χορτοφαγική',
        vegan: 'Νηστίσιμη',
        glutenFree: 'Χωρίς γλουτένη',
        lowCarb: 'Χαμηλή σε υδατάνθρακες',
        filtersTitle: 'Φίλτρα',
        difficultyLabel: 'Δυσκολία:',
        difficultyAll: 'Όλες',
        difficultyEasy: 'Εύκολη',
        difficultyMedium: 'Μέτρια',
        difficultyHard: 'Δύσκολη',
        cookingTimeLabel: 'Χρόνος Μαγειρέματος:',
        cookingTimeAll: 'Όλοι',
        cookingTimeLessThan30: '< 30 λεπτά',
        cookingTime30To60: '30-60 λεπτά',
        cookingTimeMoreThan60: '> 60 λεπτά',
        searchButton: 'Αναζήτηση Συνταγών',
        matchingRecipesTitle: 'Συνταγές που Βρέθηκαν',
        defaultSort: 'Προεπιλογή',
        sortAlphabetically: 'Αλφαβητικά',
        sortPrepTime: 'Χρόνος Προετοιμασίας',
        sortCookingTime: 'Χρόνος Μαγειρέματος',
        sortDifficulty: 'Δυσκολία',
        sortCalories: 'Θερμίδες',
        newSearchButton: 'Νέα Αναζήτηση',
        noRecipesFound: 'Δεν βρέθηκαν συνταγές. Προσπαθήστε με διαφορετικά συστατικά ή φίλτρα.',
        ingredientsLabel: 'Συστατικά:',
        instructionsLabel: 'Οδηγίες:',
        nutritionLabel: 'Διατροφική αξία:',
        prepTimeLabel: 'Χρόνος προετοιμασίας:',
        cookingTimeLabel: 'Χρόνος μαγειρέματος:',
        difficultyLabel: 'Δυσκολία:',
        footer: '© 2024 Έξυπνος Γεννήτης Ελληνικών Συνταγών | Ελληνική Κουζίνα'
    },
    en: {
        mainTitle: 'Smart Greek Recipe Generator',
        featureDesc: 'Discover new Greek recipes based on your ingredients!',
        feature1: 'Filter recipes by difficulty and cooking time',
        feature2: 'Sort your recipes with multiple criteria',
        feature3: 'Over 50 authentic Greek recipes in our database',
        startButton: 'Get Started',
        ingredientsTitle: 'Select Your Ingredients',
        addButton: 'Add',
        popularIngredientsTitle: 'Popular Ingredients:',
        selectedIngredientsTitle: 'Selected Ingredients:',
        preferencesTitle: 'Preferences and Filters',
        dietaryPreferencesTitle: 'Dietary Preferences',
        vegetarian: 'Vegetarian',
        vegan: 'Vegan',
        glutenFree: 'Gluten-Free',
        lowCarb: 'Low-Carb',
        filtersTitle: 'Filters',
        difficultyLabel: 'Difficulty:',
        difficultyAll: 'All',
        difficultyEasy: 'Easy',
        difficultyMedium: 'Medium',
        difficultyHard: 'Hard',
        cookingTimeLabel: 'Cooking Time:',
        cookingTimeAll: 'All',
        cookingTimeLessThan30: '< 30 minutes',
        cookingTime30To60: '30-60 minutes',
        cookingTimeMoreThan60: '> 60 minutes',
        searchButton: 'Search Recipes',
        matchingRecipesTitle: 'Recipes Found',
        defaultSort: 'Default',
        sortAlphabetically: 'Alphabetically',
        sortPrepTime: 'Preparation Time',
        sortCookingTime: 'Cooking Time',
        sortDifficulty: 'Difficulty',
        sortCalories: 'Calories',
        newSearchButton: 'New Search',
        noRecipesFound: 'No recipes found. Try different ingredients or filters.',
        ingredientsLabel: 'Ingredients:',
        instructionsLabel: 'Instructions:',
        nutritionLabel: 'Nutrition:',
        prepTimeLabel: 'Preparation time:',
        cookingTimeLabel: 'Cooking time:',
        difficultyLabel: 'Difficulty:',
        footer: '© 2024 Smart Greek Recipe Generator | Greek Cuisine'
    }
};

// Function to update UI text based on selected language
function updateLanguage() {
    console.log("Updating language to:", currentLanguage);
    
    // Update element texts by ID
    document.getElementById('mainTitle').textContent = translations[currentLanguage].mainTitle;
    document.getElementById('featureDesc').textContent = translations[currentLanguage].featureDesc;
    document.getElementById('feature1').textContent = translations[currentLanguage].feature1;
    document.getElementById('feature2').textContent = translations[currentLanguage].feature2;
    document.getElementById('feature3').textContent = translations[currentLanguage].feature3;
    document.getElementById('start-button').innerHTML = '<i class="fas fa-utensils"></i> ' + translations[currentLanguage].startButton;
    
    // Update header texts
    const ingredientsTitle = document.querySelector('.ingredients-title');
    if (ingredientsTitle) ingredientsTitle.textContent = translations[currentLanguage].ingredientsTitle;
    
    const ingredientsSectionH3 = document.querySelector('.ingredients-section h3');
    if (ingredientsSectionH3) ingredientsSectionH3.innerHTML = '<i class="fas fa-carrot"></i> ' + translations[currentLanguage].selectIngredients;
    
    const ingredientsSectionP = document.querySelector('.ingredients-section p');
    if (ingredientsSectionP) ingredientsSectionP.textContent = translations[currentLanguage].ingredientsPrompt;
    
    const preferencesH3 = document.querySelector('.preferences-section h3');
    if (preferencesH3) preferencesH3.innerHTML = '<i class="fas fa-sliders-h"></i> ' + translations[currentLanguage].preferences;
    
    const preferencesP = document.querySelector('.preferences-section p');
    if (preferencesP) preferencesP.textContent = translations[currentLanguage].preferencesPrompt;
    
    // Update input placeholder
    const ingredientInput = document.getElementById('ingredient-input');
    if (ingredientInput) ingredientInput.placeholder = translations[currentLanguage].ingredientPlaceholder;
    
    // Update buttons
    const addButton = document.querySelector('.add-button');
    if (addButton) addButton.innerHTML = '<i class="fas fa-plus"></i> ' + translations[currentLanguage].addIngredient;
    
    const primaryButton = document.querySelector('.primary-button');
    if (primaryButton) primaryButton.innerHTML = '<i class="fas fa-magic"></i> ' + translations[currentLanguage].generateRecipes;
    
    const secondaryButton = document.querySelector('.secondary-button');
    if (secondaryButton) secondaryButton.innerHTML = '<i class="fas fa-redo"></i> ' + translations[currentLanguage].newSearch;
    
    // Update section titles/labels
    const popularIngredientsH4 = document.querySelector('.quick-ingredients h4');
    if (popularIngredientsH4) popularIngredientsH4.textContent = translations[currentLanguage].popularIngredients;
    
    const selectedIngredientsH4 = document.querySelector('.selected-ingredients-container h4');
    if (selectedIngredientsH4) selectedIngredientsH4.textContent = translations[currentLanguage].selectedIngredients;
    
    const preferencesGroupH4 = document.querySelector('.preferences-group h4');
    if (preferencesGroupH4) preferencesGroupH4.textContent = translations[currentLanguage].dietaryPreferences;
    
    // Update labels for checkboxes
    const vegetarianLabel = document.querySelector('label[for="vegetarian"]');
    if (vegetarianLabel) vegetarianLabel.textContent = translations[currentLanguage].vegetarian;
    
    const veganLabel = document.querySelector('label[for="vegan"]');
    if (veganLabel) veganLabel.textContent = translations[currentLanguage].vegan;
    
    const glutenFreeLabel = document.querySelector('label[for="gluten-free"]');
    if (glutenFreeLabel) glutenFreeLabel.textContent = translations[currentLanguage].glutenFree;
    
    const lowCarbLabel = document.querySelector('label[for="low-carb"]');
    if (lowCarbLabel) lowCarbLabel.textContent = translations[currentLanguage].lowCarb;
    
    // Update filter labels
    const filterLabels = document.querySelectorAll('.filter-label');
    if (filterLabels[0]) filterLabels[0].textContent = translations[currentLanguage].difficulty;
    if (filterLabels[1]) filterLabels[1].textContent = translations[currentLanguage].time;
    
    // Update difficulty filters
    const difficultyFilters = document.querySelectorAll('.difficulty-filter');
    if (difficultyFilters[0]) difficultyFilters[0].textContent = translations[currentLanguage].all;
    if (difficultyFilters[1]) difficultyFilters[1].textContent = translations[currentLanguage].easy;
    if (difficultyFilters[2]) difficultyFilters[2].textContent = translations[currentLanguage].medium;
    if (difficultyFilters[3]) difficultyFilters[3].textContent = translations[currentLanguage].hard;
    
    // Update time filters
    const timeFilters = document.querySelectorAll('.time-filter');
    if (timeFilters[0]) timeFilters[0].textContent = translations[currentLanguage].allTime;
    if (timeFilters[1]) timeFilters[1].textContent = translations[currentLanguage].quick;
    if (timeFilters[2]) timeFilters[2].textContent = translations[currentLanguage].mediumTime;
    if (timeFilters[3]) timeFilters[3].textContent = translations[currentLanguage].long;
    
    // Update results screen
    const resultsTitle = document.querySelector('#results-screen h2');
    if (resultsTitle) resultsTitle.textContent = translations[currentLanguage].suggestedRecipes;
    
    // Update sort labels
    const sortLabel = document.querySelector('.sorting-options .filter-label');
    if (sortLabel) sortLabel.textContent = translations[currentLanguage].sortBy;
    
    // Update sort buttons
    const sortButtons = document.querySelectorAll('.sort-button');
    if (sortButtons[0]) sortButtons[0].textContent = translations[currentLanguage].alphabetical;
    if (sortButtons[1]) sortButtons[1].textContent = translations[currentLanguage].prepTime;
    if (sortButtons[2]) sortButtons[2].textContent = translations[currentLanguage].cookTime;
    if (sortButtons[3]) sortButtons[3].textContent = translations[currentLanguage].difficultySort;
    if (sortButtons[4]) sortButtons[4].textContent = translations[currentLanguage].calories;
    
    // Update footer
    const footer = document.querySelector('footer');
    if (footer) footer.textContent = translations[currentLanguage].footer;
    
    // Update document title
    document.title = translations[currentLanguage].mainTitle;
    
    // Translate recipe cards and other dynamic content
    translateRecipeText();
}

// Add event listener to language toggle button
document.addEventListener('DOMContentLoaded', function() {
    const languageToggle = document.getElementById('languageToggle');
    if (languageToggle) {
        languageToggle.addEventListener('click', function() {
            // Toggle language
            currentLanguage = currentLanguage === 'el' ? 'en' : 'el';
            
            // Update UI text
            updateLanguage();
            
            // Update toggle button text
            languageToggle.textContent = currentLanguage === 'el' ? 'English / Ελληνικά' : 'Ελληνικά / English';
        });
    }

    // Initialize with default language
    updateLanguage();
});

// Initialize the app by setting up event listeners
function initApp() {
    // Add welcome screen animation
    setTimeout(() => {
        document.querySelector('.recipe-container').style.opacity = '1';
        document.querySelector('.recipe-container').style.transform = 'translateY(0)';
    }, 300);
    
    // Set default active sorting option
    document.querySelector('.sort-button:nth-child(2)').classList.add('active');
    
    // Set the default active filters
    document.querySelector('.difficulty-filter:first-child').classList.add('active');
    document.querySelector('.time-filter:first-child').classList.add('active');
    
    // Initialize the ingredients datalist
    updateIngredientsDatalist();
    
    // Add a small parallax effect for welcome image
    window.addEventListener('scroll', function() {
        const scrollPosition = window.scrollY;
        const welcomeElements = document.querySelectorAll('.welcome-emoji-foods .food-emoji');
        
        welcomeElements.forEach((element, index) => {
            const speed = 0.1 * (index + 1);
            element.style.transform = `translateY(${scrollPosition * speed}px)`;
        });
    });
    
    // Smooth scroll to top on page reload
    window.onbeforeunload = function () {
        window.scrollTo(0, 0);
    }
}

// Call initApp when the DOM is fully loaded
document.addEventListener('DOMContentLoaded', initApp);

function startRecipeGenerator() {
    document.getElementById('welcome-screen').classList.remove('active');
    document.getElementById('input-screen').classList.add('active');
    playTransitionSound();
    
    // Add smooth scroll to top of page
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

function updateIngredientsDatalist() {
    const datalist = document.getElementById('ingredients-list');
    datalist.innerHTML = '';
    
    // Filter out already selected ingredients
    const availableIngredients = commonIngredients.filter(
        ingredient => !selectedIngredients.includes(ingredient)
    );
    
    availableIngredients.forEach(ingredient => {
        const option = document.createElement('option');
        option.value = ingredient;
        datalist.appendChild(option);
    });
}

function addIngredient() {
    const input = document.getElementById('ingredient-input');
    const ingredient = input.value.trim().toLowerCase();
    
    if (ingredient && !selectedIngredients.includes(ingredient)) {
        selectedIngredients.push(ingredient);
        updateSelectedIngredients();
        input.value = '';
        updateIngredientsDatalist();
        playSelectionSound();
        
        // Show a brief highlight on the ingredient section
        const section = document.querySelector('.ingredients-section');
        section.classList.add('highlight');
        setTimeout(() => {
            section.classList.remove('highlight');
        }, 300);
    }
}

function quickAddIngredient(ingredient) {
    if (!selectedIngredients.includes(ingredient)) {
        selectedIngredients.push(ingredient);
        updateSelectedIngredients();
        updateIngredientsDatalist();
        playSelectionSound();
        
        // Add animation to the selected chip
        const chips = document.querySelectorAll('.ingredient-chip');
        const selectedChip = Array.from(chips).find(chip => 
            chip.textContent.trim().toLowerCase().includes(ingredient.toLowerCase())
        );
        
        if (selectedChip) {
            selectedChip.classList.add('selected-flash');
            setTimeout(() => {
                selectedChip.classList.remove('selected-flash');
            }, 500);
        }
    }
}

function removeIngredient(ingredient) {
    selectedIngredients = selectedIngredients.filter(i => i !== ingredient);
    updateSelectedIngredients();
    updateIngredientsDatalist();
    playSelectionSound();
}

function updateSelectedIngredients() {
    const container = document.getElementById('selected-ingredients');
    container.innerHTML = '';
    
    if (selectedIngredients.length === 0) {
        container.innerHTML = '<p class="empty-message"><i class="fas fa-info-circle"></i> Δεν έχετε επιλέξει συστατικά ακόμη</p>';
        return;
    }
    
    selectedIngredients.forEach((ingredient, index) => {
        const tag = document.createElement('div');
        tag.className = 'ingredient-tag';
        tag.style.animationDelay = `${index * 0.1}s`;
        tag.innerHTML = `
            <i class="fas fa-utensil-spoon"></i> ${ingredient}
            <button onclick="removeIngredient('${ingredient}')"><i class="fas fa-times"></i></button>
        `;
        container.appendChild(tag);
        
        // Add fade-in animation
        setTimeout(() => {
            tag.style.opacity = '1';
        }, 10);
    });
}

function getSelectedPreferences() {
    const checkboxes = document.querySelectorAll('.preference-option input[type="checkbox"]:checked');
    return Array.from(checkboxes).map(checkbox => checkbox.value);
}

function setDifficultyFilter(difficulty) {
    difficultyFilter = difficulty;
    
    // Update active class
    document.querySelectorAll('.difficulty-filter').forEach(btn => {
        btn.classList.remove('active');
    });
    
    if (difficulty !== 'all') {
        document.querySelector(`.difficulty-filter.${difficulty}`).classList.add('active');
    }
}

function setTimeFilter(time) {
    timeFilter = time;
    
    // Update active class
    document.querySelectorAll('.time-filter').forEach(btn => {
        btn.classList.remove('active');
    });
    
    if (time !== 'all') {
        document.querySelector(`.time-filter[data-time="${time}"]`).classList.add('active');
    }
}

function setSortingOption(option) {
    sortingOption = option;
    
    // Update active class
    document.querySelectorAll('.sort-button').forEach(btn => {
        btn.classList.remove('active');
    });
    
    document.querySelector(`.sort-button[data-sort="${option}"]`).classList.add('active');
    
    // If we're on the results screen, re-sort the displayed recipes
    if (document.getElementById('results-screen').classList.contains('active')) {
        const matchingRecipes = findMatchingRecipes();
        displayRecipes(matchingRecipes);
    }
}

// Add this function if it doesn't exist
function switchScreen(screenId) {
    console.log("Switching to screen:", screenId);
    // Hide all screens
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    
    // Show the requested screen
    const targetScreen = document.getElementById(screenId);
    if (targetScreen) {
        targetScreen.classList.add('active');
    } else {
        console.error(`Screen with ID ${screenId} not found!`);
    }
}

// Ensure the generateRecipes function uses this switchScreen function
function generateRecipes() {
    console.log("generateRecipes function called");
    
    // Get selected dietary preferences
    dietaryPreferences = getSelectedPreferences();
    console.log("Selected dietary preferences:", dietaryPreferences);
    
    // Get matching recipes
    const matchingRecipes = findMatchingRecipes();
    console.log("Found matching recipes:", matchingRecipes ? matchingRecipes.length : 0);
    
    // Display recipes
    displayRecipes(matchingRecipes);
    
    // Play sound effect
    playCompletionSound();
    
    // Switch to results screen using the switchScreen function
    switchScreen('results-screen');
}

// Update displayRecipes to use the switchScreen function
function displayRecipes(matchingRecipes) {
    console.log("displayRecipes function called");
    const resultsContainer = document.getElementById('recipes-container');
    
    if (!resultsContainer) {
        console.error("Could not find recipes-container element!");
        return;
    }
    
    resultsContainer.innerHTML = '';
    
    // Add notification if we're using alternative results due to no exact matches
    const showingAlternativeResults = document.querySelector('.notification');
    if (showingAlternativeResults) {
        showingAlternativeResults.remove();
    }
    
    if (!matchingRecipes || matchingRecipes.length === 0) {
        console.log("No matching recipes found, displaying no results message");
        resultsContainer.innerHTML = '<div class="no-results">Δεν βρέθηκαν συνταγές. Δοκιμάστε διαφορετικά συστατικά ή προτιμήσεις.</div>';
        // Still switch to results screen to show the no-results message
        switchScreen('results-screen');
        return;
    }
    
    console.log(`Displaying ${matchingRecipes.length} recipes`);
    
    // Check if relaxed criteria were used
    if (matchingRecipes.isRelaxed) {
        // Create notification element
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.innerHTML = '<i class="fas fa-info-circle"></i> Showing alternative recipes because no exact matches were found.';
        resultsContainer.appendChild(notification);
    }

    // Create recipe cards
    matchingRecipes.forEach(recipe => {
        const recipeCard = document.createElement('div');
        recipeCard.className = 'recipe-card';
        
        // Create the emoji element based on recipe name
        let emoji = getEmojiForRecipe(recipe.name);
        
        recipeCard.innerHTML = `
            <div class="recipe-head">
                <div class="food-emoji-large">${emoji}</div>
                <div class="recipe-header-text">
                    <h3 class="recipe-title">${recipe.name}</h3>
                </div>
            </div>
            <div class="recipe-content">
                <div class="recipe-info">
                    <div class="recipe-info-item">
                        <span>Δυσκολία: </span>
                        <span class="difficulty-indicator difficulty-${getDifficultyClass(recipe.difficulty)}">${recipe.difficulty}</span>
                    </div>
                    <div class="recipe-info-item">
                        <span>Χρόνος Προετοιμασίας: </span>
                        <span>${recipe.prepTime}</span>
                    </div>
                    <div class="recipe-info-item">
                        <span>Χρόνος Μαγειρέματος: </span>
                        <span>${recipe.cookTime}</span>
                    </div>
                </div>
                <div class="recipe-categories">
                    <span>Κατηγορίες: </span>
                    <span>${getCategoryIcons(recipe.categories)}</span>
                </div>
                <button class="view-recipe-btn" onclick="showRecipeDetails('${recipe.name}')">Δείτε Συνταγή</button>
            </div>
        `;
        
        resultsContainer.appendChild(recipeCard);
    });
    
    // Add empty boxes to fill out the grid
    fillEmptyBoxes();
    
    // Fix recipe titles
    enforceTitleVisibility();
    
    // If we've changed the language, translate the recipes as well
    if (currentLanguage === 'en') {
        translateRecipeText();
    }

    // Show the results screen using the switchScreen function
    switchScreen('results-screen');
}

function getCategoryIcons(categories) {
    const iconMap = {
        'vegetarian': '<span class="category-icon vegetarian" title="Χορτοφαγική"><i class="fas fa-seedling"></i></span>',
        'vegan': '<span class="category-icon vegan" title="Νηστίσιμη"><i class="fas fa-leaf"></i></span>',
        'gluten-free': '<span class="category-icon gluten-free" title="Χωρίς γλουτένη"><i class="fas fa-bread-slice"></i></span>',
        'low-carb': '<span class="category-icon low-carb" title="Χαμηλή σε υδατάνθρακες"><i class="fas fa-weight"></i></span>'
    };
    
    return categories.map(category => iconMap[category] || '').join('');
}

function restartGenerator() {
    selectedIngredients = [];
    dietaryPreferences = [];
    document.getElementById('selected-ingredients').innerHTML = '';
    document.querySelectorAll('.preference-option input[type="checkbox"]').forEach(checkbox => {
        checkbox.checked = false;
    });
    document.getElementById('results-screen').classList.remove('active');
    document.getElementById('welcome-screen').classList.add('active');
    updateIngredientsDatalist();
    playTransitionSound();
    
    // Scroll to top of page
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

// Sound effects
function playTransitionSound() {
    const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU');
    audio.play().catch(() => {});
}

function playSelectionSound() {
    const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU');
    audio.play().catch(() => {});
}

function playCompletionSound() {
    const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU');
    audio.play().catch(() => {});
}

// Add immediate execution function to force recipe title visibility
(function fixRecipeTitles() {
    // Execute on page load and after recipe search/display
    document.addEventListener('DOMContentLoaded', enforceTitleVisibility);
    
    function enforceTitleVisibility() {
        // Set timeout to allow recipe cards to render
        setTimeout(() => {
            // Target all recipe titles and force them to be visible
            const recipeTitles = document.querySelectorAll('.recipe-card h3, .recipe-header-text h3, .recipe-card .recipe-content > div:first-child');
            
            recipeTitles.forEach(title => {
                // Force title to be visible
                if (!title.textContent.trim()) {
                    // Find the recipe name from parent elements
                    const recipeCard = title.closest('.recipe-card');
                    if (recipeCard) {
                        const recipeName = recipeCard.dataset.name || recipeCard.querySelector('[data-name]')?.dataset.name;
                        if (recipeName) {
                            title.textContent = recipeName;
                        }
                    }
                }
                
                // Apply critical styles directly
                Object.assign(title.style, {
                    color: 'black',
                    backgroundColor: 'white',
                    border: '3px solid black',
                    padding: '15px',
                    margin: '10px auto',
                    display: 'block',
                    width: '90%',
                    textAlign: 'center',
                    fontWeight: '900',
                    fontSize: '24px',
                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)'
                });
            });
        }, 100);
    }
    
    // Force execution when recipes are searched
    const originalFindMatchingRecipes = window.findMatchingRecipes;
    if (originalFindMatchingRecipes) {
        window.findMatchingRecipes = function() {
            const result = originalFindMatchingRecipes.apply(this, arguments);
            enforceTitleVisibility();
            return result;
        };
    }
    
    // Force execution when screen changes
    const originalShowScreen = window.showScreen;
    if (originalShowScreen) {
        window.showScreen = function() {
            const result = originalShowScreen.apply(this, arguments);
            enforceTitleVisibility();
            return result;
        };
    }
    
    // Set interval to repeatedly check for and fix titles
    setInterval(enforceTitleVisibility, 1000);
})();

// CRITICAL FIX: Add direct text color forcing as first priority

// Immediately execute on page load
document.addEventListener('DOMContentLoaded', function() {
    // Apply fix immediately
    forceTextColors();
    
    // Keep checking every 250ms to ensure text remains visible
    setInterval(forceTextColors, 250);
});

// Function to force all text to be black
function forceTextColors() {
    // Get all elements on the page
    const allElements = document.querySelectorAll('*');
    
    // Force each element's text to be black
    allElements.forEach(el => {
        el.style.color = '#000000';
        
        // Special handling for recipe titles
        if (el.tagName === 'H3' || 
            el.classList.contains('recipe-title') || 
            (el.parentElement && el.parentElement.classList.contains('recipe-content') && !el.textContent.trim().includes(':')) ||
            (el.parentElement && el.parentElement.classList.contains('recipe-header-text'))) {
            
            // Force white background and black text for titles
            el.style.backgroundColor = '#FFFFFF';
            el.style.color = '#000000';
            el.style.fontWeight = '900';
            el.style.padding = '10px';
            el.style.margin = '10px auto';
            el.style.border = '3px solid #000000';
            el.style.display = 'block';
            el.style.textAlign = 'center';
            el.style.boxShadow = '0 3px 6px rgba(0,0,0,0.3)';
        }
    });
    
    // Specifically target recipe cards
    const recipeCards = document.querySelectorAll('.recipe-card');
    recipeCards.forEach(card => {
        // Find title elements within card
        const titleElement = card.querySelector('h3') || 
                            card.querySelector('.recipe-content > div:first-child') ||
                            card.querySelector('.recipe-header-text > div');
        
        if (titleElement) {
            titleElement.style.backgroundColor = '#FFFFFF';
            titleElement.style.color = '#000000';
            titleElement.style.fontWeight = '900';
            titleElement.style.fontSize = '24px';
            titleElement.style.padding = '15px';
            titleElement.style.margin = '10px auto';
            titleElement.style.border = '3px solid #000000';
            titleElement.style.display = 'block';
            titleElement.style.textAlign = 'center';
            titleElement.style.width = '90%';
        }
    });
}

// SUPER EMERGENCY FIX - Directly target empty white boxes in recipe cards
function fillEmptyBoxes() {
    // Find all recipe cards
    const recipeCards = document.querySelectorAll('.recipe-card');
    
    recipeCards.forEach(card => {
        // Find the specific empty white box (will look like an empty div with a border)
        const emptyBoxes = card.querySelectorAll('div:empty, div:not(:has(*)):not(:empty)');
        
        // Check recipe title/name from data attributes or nearby elements
        let recipeName = '';
        if (card.dataset && card.dataset.name) {
            recipeName = card.dataset.name;
        } else {
            // Try to find recipe name by searching through child elements' text content
            const possibleNameElements = card.querySelectorAll('h3, .recipe-name, .recipe-title');
            for (const element of possibleNameElements) {
                if (element.textContent && element.textContent.trim()) {
                    recipeName = element.textContent.trim();
                    break;
                }
            }
            
            // If still not found, try to extract from attributes
            if (!recipeName) {
                const recipeContent = card.querySelector('.recipe-content');
                if (recipeContent) {
                    recipeName = recipeContent.getAttribute('data-recipe-name') || 
                                card.getAttribute('data-recipe-name') || 
                                card.getAttribute('id') || 
                                'Ελληνική Συνταγή'; // Default generic name
                }
            }
        }
        
        // Get recipe data from the full recipes array
        const recipeData = window.recipes.find(r => {
            // Handle various naming formats
            return r.name === recipeName || 
                   r.name.toLowerCase() === recipeName.toLowerCase() ||
                   recipeName.includes(r.name) ||
                   r.name.includes(recipeName);
        });
        
        if (recipeData) {
            recipeName = recipeData.name; // Use the proper name from the recipes array
        }
        
        // Apply the name to all empty boxes
        emptyBoxes.forEach(box => {
            // Check if this looks like a title box (rectangular, near top of card)
            if (!box.textContent.trim() || box.textContent === "undefined") {
                // Force recipe name in this box
                box.textContent = recipeName;
                box.style.color = '#000000';
                box.style.fontWeight = '900';
                box.style.fontSize = '28px';
                box.style.backgroundColor = '#FFFFFF';
                box.style.padding = '15px';
                box.style.margin = '10px auto';
                box.style.border = '3px solid #000000';
                box.style.display = 'block';
                box.style.textAlign = 'center';
                box.style.width = '90%';
                box.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.3)';
            }
        });
    });
}

// Run the empty box filler function on page load and at intervals
document.addEventListener('DOMContentLoaded', function() {
    // Run immediately and every half second to ensure empty boxes are filled
    fillEmptyBoxes();
    setInterval(fillEmptyBoxes, 500);
    
    // Also run when new recipes are displayed
    const originalDisplayRecipes = window.displayRecipes;
    if (originalDisplayRecipes) {
        window.displayRecipes = function() {
            const result = originalDisplayRecipes.apply(this, arguments);
            setTimeout(fillEmptyBoxes, 100);
            setTimeout(fillEmptyBoxes, 500);
            return result;
        };
    }
});

// Add this function after the existing updateLanguage function
function translateRecipeText() {
    console.log("Translating recipe text elements");
    
    // Translate recipe cards if any exist
    const recipeCards = document.querySelectorAll('.recipe-card');
    if (recipeCards.length > 0) {
        console.log(`Found ${recipeCards.length} recipe cards to translate`);
        
        recipeCards.forEach(card => {
            // Get recipe name from the card
            const titleElement = card.querySelector('h3');
            if (!titleElement) return;
            
            const recipeName = titleElement.textContent.trim();
            console.log(`Processing recipe: ${recipeName}`);
            
            // Find matching recipe in our database
            const recipe = recipes.find(r => r.name === recipeName);
            if (!recipe) return;
            
            // Translate difficulty and times
            const infoItems = card.querySelectorAll('.recipe-info-item');
            infoItems.forEach(item => {
                const label = item.querySelector('span:first-child');
                if (!label) return;
                
                if (label.textContent.includes('Δυσκολία') || label.textContent.includes('Difficulty')) {
                    label.textContent = currentLanguage === 'el' ? 'Δυσκολία: ' : 'Difficulty: ';
                    
                    // Translate difficulty value
                    const valueSpan = item.querySelector('span:nth-child(2)');
                    if (valueSpan) {
                        const difficultyMap = {
                            'Εύκολη': 'Easy',
                            'Μέτρια': 'Medium', 
                            'Δύσκολη': 'Hard',
                            'Easy': 'Εύκολη',
                            'Medium': 'Μέτρια',
                            'Hard': 'Δύσκολη'
                        };
                        
                        const currentValue = valueSpan.textContent.trim();
                        if (difficultyMap[currentValue]) {
                            valueSpan.textContent = currentLanguage === 'el' ? 
                                difficultyMap[currentValue] : 
                                difficultyMap[currentValue];
                        }
                    }
                }
                
                if (label.textContent.includes('Χρόνος Προετοιμασίας') || label.textContent.includes('Prep Time')) {
                    label.textContent = currentLanguage === 'el' ? 'Χρόνος Προετοιμασίας: ' : 'Prep Time: ';
                }
                
                if (label.textContent.includes('Χρόνος Μαγειρέματος') || label.textContent.includes('Cook Time')) {
                    label.textContent = currentLanguage === 'el' ? 'Χρόνος Μαγειρέματος: ' : 'Cook Time: ';
                }
            });
            
            // Translate categories
            const categoryText = card.querySelector('.recipe-categories');
            if (categoryText) {
                const categoryMap = {
                    'Χορτοφαγικό': 'Vegetarian',
                    'Νηστίσιμο': 'Vegan',
                    'Χωρίς Γλουτένη': 'Gluten Free',
                    'Χαμηλό σε Υδατάνθρακες': 'Low Carb',
                    'Vegetarian': 'Χορτοφαγικό',
                    'Vegan': 'Νηστίσιμο',
                    'Gluten Free': 'Χωρίς Γλουτένη',
                    'Low Carb': 'Χαμηλό σε Υδατάνθρακες'
                };
                
                let updatedText = categoryText.textContent;
                Object.keys(categoryMap).forEach(key => {
                    if (updatedText.includes(key)) {
                        updatedText = updatedText.replace(key, currentLanguage === 'el' ? key : categoryMap[key]);
                    }
                });
                
                // Replace "Κατηγορίες" with "Categories" if in English
                if (currentLanguage === 'en') {
                    updatedText = updatedText.replace('Κατηγορίες:', 'Categories:');
                } else {
                    updatedText = updatedText.replace('Categories:', 'Κατηγορίες:');
                }
                
                categoryText.textContent = updatedText;
            }
            
            // Translate "View Recipe" button
            const viewButton = card.querySelector('.view-recipe-btn');
            if (viewButton) {
                viewButton.textContent = currentLanguage === 'el' ? 'Δείτε Συνταγή' : 'View Recipe';
            }
        });
    }
    
    // Translate recipe details if a modal is open
    const recipeModal = document.querySelector('.recipe-modal.active');
    if (recipeModal) {
        console.log("Translating open recipe modal");
        
        // Translate ingredients header
        const ingredientsHeader = recipeModal.querySelector('.ingredients-list h4');
        if (ingredientsHeader) {
            ingredientsHeader.textContent = currentLanguage === 'el' ? 'Συστατικά:' : 'Ingredients:';
        }
        
        // Translate instructions header
        const instructionsHeader = recipeModal.querySelector('.instructions-list h4');
        if (instructionsHeader) {
            instructionsHeader.textContent = currentLanguage === 'el' ? 'Οδηγίες:' : 'Instructions:';
        }
        
        // Translate nutrition info
        const nutritionInfo = recipeModal.querySelector('.nutrition-info');
        if (nutritionInfo) {
            const nutritionText = nutritionInfo.textContent;
            if (currentLanguage === 'en') {
                nutritionInfo.textContent = nutritionText
                    .replace('Θερμίδες:', 'Calories:')
                    .replace('Πρωτεΐνες:', 'Protein:')
                    .replace('Υδατάνθρακες:', 'Carbs:')
                    .replace('Λίπος:', 'Fat:');
            } else {
                nutritionInfo.textContent = nutritionText
                    .replace('Calories:', 'Θερμίδες:')
                    .replace('Protein:', 'Πρωτεΐνες:')
                    .replace('Carbs:', 'Υδατάνθρακες:')
                    .replace('Fat:', 'Λίπος:');
            }
        }
        
        // Translate close button
        const closeButton = recipeModal.querySelector('.close-modal');
        if (closeButton) {
            closeButton.textContent = currentLanguage === 'el' ? 'Κλείσιμο' : 'Close';
        }
    }
    
    // Translate notification messages
    const notification = document.querySelector('.notification');
    if (notification) {
        if (notification.textContent.includes('Showing alternative recipes')) {
            notification.textContent = currentLanguage === 'el' 
                ? 'Εμφάνιση εναλλακτικών συνταγών επειδή δεν βρέθηκαν ακριβείς αντιστοιχίες.'
                : 'Showing alternative recipes because no exact matches were found.';
        }
    }
    
    // Translate "No results" message
    const noResults = document.querySelector('.no-results');
    if (noResults) {
        noResults.textContent = currentLanguage === 'el'
            ? 'Δεν βρέθηκαν συνταγές. Δοκιμάστε διαφορετικά συστατικά ή προτιμήσεις.'
            : 'No recipes found. Try different ingredients or preferences.';
    }
}

// Original code continues below... 

function findMatchingRecipes() {
    // First try: Apply all filters
    let filteredRecipes = recipes.filter(recipe => {
        // Check if recipe matches dietary preferences
        const matchesPreferences = dietaryPreferences.length === 0 || 
            dietaryPreferences.every(pref => recipe.categories.includes(pref));
        
        // Check if recipe contains at least one selected ingredient
        const matchesIngredients = selectedIngredients.length === 0 || 
            selectedIngredients.some(ingredient => 
                recipe.ingredients.some(i => i.includes(ingredient))
            );
        
        // Check difficulty filter
        const matchesDifficulty = difficultyFilter === 'all' || 
            (difficultyFilter === 'easy' && recipe.difficulty === 'Εύκολη') ||
            (difficultyFilter === 'medium' && recipe.difficulty === 'Μέτρια') ||
            (difficultyFilter === 'hard' && recipe.difficulty === 'Δύσκολη');
        
        // Check time filter
        let matchesTime = true;
        if (timeFilter !== 'all') {
            const cookTimeMinutes = parseInt(recipe.cookTime) || 0;
            
            if (timeFilter === 'quick' && cookTimeMinutes > 30) matchesTime = false;
            if (timeFilter === 'medium' && (cookTimeMinutes <= 30 || cookTimeMinutes > 60)) matchesTime = false;
            if (timeFilter === 'long' && cookTimeMinutes <= 60) matchesTime = false;
        }
        
        return matchesPreferences && matchesIngredients && matchesDifficulty && matchesTime;
    });
    
    // If no recipes found, relax constraints gradually
    if (filteredRecipes.length === 0 && (selectedIngredients.length > 0 || dietaryPreferences.length > 0 || difficultyFilter !== 'all' || timeFilter !== 'all')) {
        console.log("No recipes found with strict criteria, relaxing constraints...");
        
        // Try without time and difficulty filters
        filteredRecipes = recipes.filter(recipe => {
            const matchesPreferences = dietaryPreferences.length === 0 || 
                dietaryPreferences.every(pref => recipe.categories.includes(pref));
            
            const matchesIngredients = selectedIngredients.length === 0 || 
                selectedIngredients.some(ingredient => 
                    recipe.ingredients.some(i => i.includes(ingredient))
                );
            
            return matchesPreferences && matchesIngredients;
        });
        
        // Still no recipes? Try to match just ingredients or just dietary preferences
        if (filteredRecipes.length === 0) {
            if (selectedIngredients.length > 0) {
                filteredRecipes = recipes.filter(recipe => 
                    selectedIngredients.some(ingredient => 
                        recipe.ingredients.some(i => i.includes(ingredient))
                    )
                );
            }
            
            // If still empty and we have dietary preferences, try just those
            if (filteredRecipes.length === 0 && dietaryPreferences.length > 0) {
                filteredRecipes = recipes.filter(recipe => 
                    dietaryPreferences.every(pref => recipe.categories.includes(pref))
                );
            }
        }
        
        // As a last resort, find recipes that are most similar to the ingredients requested
        if (filteredRecipes.length === 0 && selectedIngredients.length > 0) {
            // Calculate similarity scores for each recipe
            const recipesWithScores = recipes.map(recipe => {
                let score = 0;
                // Check for partial matches in ingredients
                for (const selectedIngredient of selectedIngredients) {
                    for (const recipeIngredient of recipe.ingredients) {
                        if (recipeIngredient.includes(selectedIngredient) || 
                            selectedIngredient.includes(recipeIngredient)) {
                            score += 1;
                        }
                    }
                }
                return { recipe, score };
            });
            
            // Sort by similarity score
            recipesWithScores.sort((a, b) => b.score - a.score);
            
            // Take top 3 most relevant recipes
            filteredRecipes = recipesWithScores
                .slice(0, 3)
                .map(item => item.recipe);
        }
        
        // Final fallback: If everything else fails, return some random recipes
        if (filteredRecipes.length === 0) {
            // Return 3 random recipes
            filteredRecipes = [];
            const tempRecipes = [...recipes];
            for (let i = 0; i < 3 && tempRecipes.length > 0; i++) {
                const randomIndex = Math.floor(Math.random() * tempRecipes.length);
                filteredRecipes.push(tempRecipes[randomIndex]);
                tempRecipes.splice(randomIndex, 1);
            }
        }
        
        // Mark that we're using relaxed criteria
        filteredRecipes.isRelaxed = true;
    }
    
    // Sort recipes based on sorting option
    if (sortingOption === 'alphabetical') {
        filteredRecipes.sort((a, b) => a.name.localeCompare(b.name));
    } else if (sortingOption === 'prep-time') {
        filteredRecipes.sort((a, b) => {
            const aTime = parseInt(a.prepTime) || 0;
            const bTime = parseInt(b.prepTime) || 0;
            return aTime - bTime;
        });
    } else if (sortingOption === 'cook-time') {
        filteredRecipes.sort((a, b) => {
            const aTime = parseInt(a.cookTime) || 0;
            const bTime = parseInt(b.cookTime) || 0;
            return aTime - bTime;
        });
    } else if (sortingOption === 'difficulty') {
        const difficultyOrder = { 'Εύκολη': 1, 'Μέτρια': 2, 'Δύσκολη': 3 };
        filteredRecipes.sort((a, b) => difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty]);
    } else if (sortingOption === 'calories') {
        filteredRecipes.sort((a, b) => {
            const aCalories = parseInt(a.nutrition.match(/\d+/)[0]) || 0;
            const bCalories = parseInt(b.nutrition.match(/\d+/)[0]) || 0;
            return aCalories - bCalories;
        });
    }
    
    return filteredRecipes;
}